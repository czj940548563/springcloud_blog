<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czj.blog.blogauth.dao.RoleDao">
    <resultMap id="BaseResultMap" type="com.czj.blog.blogauth.domain.Role">
        <result column="id" property="id" />
        <result column="role_name" property="roleName" />
        <result column="description" property="description" />
        <result column="createTime" property="create_time" />
        <collection property="rights" ofType="Right" select="getRights" javaType="ArrayList" column="id">
        </collection>
    </resultMap>

    <parameterMap id="Role" type="com.czj.blog.blogauth.domain.Role"/>

    <sql id="Base_Column_List">
		id, role_name, description,create_time
	</sql>

    <select id="selectRoleByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from t_role
        where role_name = #{roleName}
    </select>


    <select id="getRights" parameterType="java.lang.Long" resultType="com.czj.blog.blogauth.domain.Right">
	select
			r.id as id,
			r.right_name as rightName,
			r.description as description,
			r.create_time as createTime
		from t_right r,t_role_right rr
		where rr.role_id= #{id} and rr.role_id=r.id
	</select>


    <update id="updateRole" parameterType="com.czj.blog.blogauth.domain.Role">
        update t_role
        <set>
            <if test="roleName != null">role_name=#{roleName},</if>
            <if test="description != null">description=#{description},</if>
        </set>
        where id=#{id}
    </update>

    <insert id="insertRole" parameterType="com.czj.blog.blogauth.domain.Role">
        insert into t_role(id, role_name, description)
        values(#{id}, #{roleName}, #{description})
    </insert>

    <delete id="deleteRoles"  parameterType = "java.util.List">
        delete from t_role where 1>2
            or id in
        <foreach collection="list"  item="item" open="(" separator="," close=")"  >
            #{item}
        </foreach>
    </delete>
    <delete id="deleteUserRoleById" parameterType="java.util.List">
        delete from t_user_role where role_id in
        <foreach collection="list" item="id" open="(" separator="," close=")" index="index">
            #{id}
        </foreach>
    </delete>

</mapper>
