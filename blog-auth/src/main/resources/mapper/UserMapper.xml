<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czj.blog.blogauth.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.czj.blog.blogauth.domain.User">
        <result column="id" property="id"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="mail" property="mail"/>
        <result column="login_time" property="loginTime"/>
        <result column="login_count" property="loginCount"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <collection property="roles" ofType="Role" select="selectRoles" javaType="ArrayList" column="id">
        </collection>
    </resultMap>

    <resultMap id="RoleMap" type="com.czj.blog.blogauth.domain.Role">
        <result column="id" property="id" />
        <result column="role_name" property="roleName" />
        <result column="description" property="description" />
        <result column="createTime" property="create_time" />
        <result column="updateTime" property="update_time" />
        <result column="enable" property="enable" />
    </resultMap>

    <parameterMap id="User" type="com.czj.blog.blogauth.domain.User"/>

    <sql id="Base_Column_List">
		id, account, password, mobile,mail,login_time,last_login_time,login_count,create_time,update_time
	</sql>
    <sql id="Role_Column_List">
		id,role_name,description
	</sql>

    <select id="selectUser" resultMap="BaseResultMap" parameterType="com.czj.blog.blogauth.domain.User">
        select
        <include refid="Base_Column_List"/>
        from t_user

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="account != null">account=#{account} </if>
            <if test="mobile != null">and mobile=#{mobile} </if>
            <if test="mail != null">and mail=#{mail}</if>
        </trim>
    </select>

    <select id="selectAllUser" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List"/>
        from t_user
    </select>


    <select id="selectRoles" parameterType="java.lang.String" resultType="com.czj.blog.blogauth.domain.Role">
		select r.id as id,
			r.role_name as roleName,
			r.description as description,
			r.create_time as createTime,
			r.enable as enable
		from t_role r,t_user_role ur
		where ur.user_id= #{id} and ur.role_id=r.id
	</select>


    <update id="updateUser" parameterType="com.czj.blog.blogauth.domain.User">
        update t_user
        <set>
            <if test="password != null">password=#{password},</if>
            <if test="mobile != null">mobile=#{mobile},</if>
            <if test="mail != null">mail=#{mail},</if>
            <if test="loginTime != null">login_time=#{loginTime},</if>
            <if test="lastLoginTime != null">last_login_time=#{lastLoginTime},</if>
            <if test="loginCount != null">login_count=#{loginCount},</if>
            <if test="createTime != null">create_time=#{createTime},</if>
            <if test="updateTime != null">update_time=#{updateTime},</if>
        </set>
        where id=#{id}
    </update>

    <insert id="insertUser"  parameterType="com.czj.blog.blogauth.domain.User">
        insert into t_user(id,account, password, mobile, mail,login_count,login_time,last_login_time,create_time,update_time)
        values(#{id}, #{account}, #{password}, #{mobile}, #{mail},#{loginCount},#{loginTime},#{lastLoginTime},#{createTime},#{updateTime})

    </insert>

    <insert id="insertUserRole"  parameterType="java.util.Map">
        insert into t_user_role(id,user_id,role_id)
        values(#{id}, #{userId}, #{roleId})
    </insert>


    <delete id="deleteUsers" parameterType="java.util.List">
        delete from t_user where id in
        <foreach collection="list" item="id" open="(" separator="," close=")" index="index">
            #{id}
        </foreach>
    </delete>

    <select id="selectUserByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from t_user where account=#{account}
    </select>
    <select id="selectOtherRoles" parameterType="java.util.List" resultMap="RoleMap">
        select
        <include refid="Role_Column_List"/>
        from t_role
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            enable='1'
            <if test="list != null">
                and id not in
                <foreach collection="list" item="id" open="(" separator="," close=")" index="index">
                 #{id}
                </foreach>
            </if>
        </trim>

    </select>
    <delete id="deleteUserRoleById" parameterType="java.util.List">
        delete from t_user_role where user_id in
        <foreach collection="list" item="id" open="(" separator="," close=")" index="index">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteUserRoleByDoubleId" parameterType="java.util.Map" >
        delete from t_user_role where user_id=#{userId} and role_id=#{roleId}
    </delete>

</mapper>
